openapi: 3.0.3
info:
  title: Swagger Price REST API - OpenAPI 3.0
  description: |-
    Alicia Open Api Hexagonal Arquitecture test.

    _Test for GFT/Inditex_
  contact:
    name: Alicia Florido
    email: aliciaflorido33@gmail.com
  version: 1.0.11
servers:
  - url: 'http://localhost:8080'
    description: dev
tags:
  - name: price
    description: Price RestFul api
paths:
  /price:
    get:
      tags:
        - price
      summary: Find Prices by params
      description: Find Prices by params
      operationId: findPricesByParams
      parameters:
        - name: date
          in: query
          description: Apply date
          required: true
          schema:
            type: string
            format: date-time
            example: '2017-07-21T17:32:28Z'
        - name: productId
          in: query
          description: Product Id
          required: true
          schema:
            type: integer
        - name: brandId
          in: query
          description: Brand Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceDto'
        '400':
          description: Invalid status value
components:
  schemas:
    PriceDto:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          example: 10
        product:
          $ref: '#/components/schemas/ProductDto'
        brand:
          $ref: '#/components/schemas/BrandDto'
        priceList:
          $ref: '#/components/schemas/PriceListDto'
        startDate:
          type: string
          format: date
          example: '2020-06-14T17:32:28Z'
        endDate:
          type: string
          format: date
        price:
          type: number
          format: double
          example: 10.18
    BrandDto:
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: zara
    PriceListDto:
      properties:
        id:
          type: integer
          example: 10
        fare:
          type: string
          example: 'normal'
    ProductDto:
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: camisa